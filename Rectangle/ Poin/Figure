using System;

class Rectangle
{
    private double side1;
    private double side2;

    public Rectangle(double side1, double side2)
    {
        this.side1 = side1;
        this.side2 = side2;
    }

    public double CalculateArea() => side1 * side2;

    public double CalculatePerimeter() => 2 * (side1 + side2);

    public double Area => CalculateArea();

    public double Perimeter => CalculatePerimeter();
}

class Point
{
    public double X { get; }
    public double Y { get; }
    public string Name { get; }

    public Point(double x, double y, string name)
    {
        X = x;
        Y = y;
        Name = name;
    }
}

class Figure
{
    private Point[] points;

    public Figure(params Point[] points)
    {
        if (points.Length < 3 || points.Length > 5)
            throw new ArgumentException("The number of points should be from 3 to 5..");

        this.points = points;
    }

    public double GetSideLength(Point A, Point B) => Math.Sqrt(Math.Pow(B.X - A.X, 2) + Math.Pow(B.Y - A.Y, 2));

    public void CalculatePerimeter()
    {
        double perimeter = 0;

        for (int i = 0; i < points.Length - 1; i++)
            perimeter += GetSideLength(points[i], points[i + 1]);

        perimeter += GetSideLength(points[points.Length - 1], points[0]);
        Console.WriteLine($"Р = a + b + з : {perimeter}");
    }
}

class Program
{
    static void Main()
    {
        Console.Write("х=9(cm): ");
        double side1 = double.Parse(Console.ReadLine());

        Console.Write(" х=6(cm): ");
        double side2 = double.Parse(Console.ReadLine());

        Rectangle rectangle = new Rectangle(side1, side2);

        Console.WriteLine($"S = a · b: {rectangle.Area}");
        Console.WriteLine($"P = 2(a + b)\r\n: {rectangle.Perimeter}");

        Point point1 = new Point(0, 0, "A");
        Point point2 = new Point(0, 4, "B");
        Point point3 = new Point(3, 0, "C");

        Figure triangle = new Figure(point1, point2, point3);
        triangle.CalculatePerimeter();

        Console.ReadKey();
    }
}
